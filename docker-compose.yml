version: '3.8'

services:
  # Oracle Database
  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: spring-oracle-db
    environment:
      - ORACLE_PWD=oracle123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - spring-oracle-network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "system/oracle123@//localhost:1521/XE", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Spring Boot Application
  spring-oracle-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-oracle-app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-db:1521/XE
      - SPRING_DATASOURCE_USERNAME=demo
      - SPRING_DATASOURCE_PASSWORD=demo_password
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      oracle-db:
        condition: service_healthy
    networks:
      - spring-oracle-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Jenkins (for CI/CD)
  jenkins:
    image: jenkins/jenkins:lts-jdk21
    container_name: jenkins
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - spring-oracle-network
    restart: unless-stopped

volumes:
  oracle-data:
    driver: local
  jenkins-data:
    driver: local

networks:
  spring-oracle-network:
    driver: bridge
